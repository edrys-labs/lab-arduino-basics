id: 1gPR0JkAfQDRgKoa7dc3MQfziZ0Lwp2TbUAJMZKl
createdBy: Mj92OSQdrbcE
dateCreated: 1689064662293
name: Arduino - Blinkly
meta:
  logo: >-
    https://repository-images.githubusercontent.com/487803615/83e1b148-5e81-4733-8ffc-e9ac5340547e
  description: >-
    Basic Arduino Blockly Blink example. If you run this in station mode you need to run
    a terminal server locally: Make sure that one participant shares a pytermjs
    session directly or from a docker file as described <a
    href="https://github.com/Cross-Lab-Project/edrys_module-pyxtermjs">here</a>
    or run:

    <br><br>

    <code>docker run -it -p 5000:5000 crosslab/edrys_pyxtermjs_arduino
    --device=/dev/ttyACM0:/dev/ttyACM0</code>
  selfAssign: true
  defaultNumberOfRooms: 0
  id: 79sFHo6ONB1S25cTN7emXmOibQ2HNWb2G9X3Xn2x
members:
  teacher: []
  student: []
modules:
  - url: https://cross-lab-project.github.io/edrys_module-markdown-it/index.html
    config: >
      # Welcome to the Edrys - PyTermJS


      With the help of the edrys module

      [PyTermJS](https://github.com/Cross-Lab-Project/edrys_module-pyxtermjs)

      it is possible to share a terminal-session for different purposes with
      your peers.

      Therefore one will have start either PyTermJS directly on your computer,

      or you can run some of our docker containers directly.

      Thus, you will have to install Python or [Docker](#docker) at least on one
      machine that runs in station mode.


      ``` bash

      $ docker run -it -p 5000:5000 crosslab/edrys_pyxtermjs

      ```


      To start an entire development environment with gcc, java, haskell,
      nodejs, etc.

      run the following command


      ``` bash

      $ docker run -it -p 5000:5000 crosslab/edrys_pyxtermjs_development

      ```


      In case you want to run an Arduino environment execute the following, it
      comes

      with an

      [arduino-cli](https://arduino.github.io/arduino-cli/0.35/),

      some base libraries and support for arduino avr and megaavr.

      For more information checkout the

      [Dockerfile](https://github.com/Cross-Lab-Project/edrys_module-pyxtermjs/blob/master/docker/arduino/Dockerfile).


      ``` bash
       $ docker run -it -p 5000:5000 crosslab/edrys_pyxtermjs_arduino \
          --device=/dev/ttyACM0:/dev/ttyACM0 \
          --device-cgroup-rule='c 166:* rmv' \
          --device-cgroup-rule='c 189:* rmv'
      ```


      ## Open a station

      If you own this course, simply open the settings by clicking onto the
      gear-symbol, switch to "station" settings and open or share the link.

      Otherwise simply copy the entire url and replace `classroom` by `station`
      ...


      Afterwards a new station will appear on the navigation bar on the left.
      Click on it and you will be redirected to the station.

      ## Docker


      Docker is an open platform for developing, shipping, and running
      applications that separates applications from infrastructure to enable
      quick software delivery.


      [Installation](https://docs.docker.com/engine/install/)


      ### Short Introduction


      <iframe width="560" height="315"
      src="https://www.youtube.com/embed/Gjnup-PuquQ?si=FWcDvC369Qim9q7c"
      title="YouTube video player" frameborder="0" allow="accelerometer;
      autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture;
      web-share" allowfullscreen></iframe>
    studentConfig: ''
    teacherConfig: ''
    stationConfig: ''
    showInCustom: lobby
    width: full
    height: huge
  - url: >-
      https://cross-lab-project.github.io/edrys_module-blockly-duino-v2/index.html
    config:
      runCommand: execute
      board: arduino_uno
      code: >-
        <xml xmlns="https://developers.google.com/blockly/xml">

        <block type="board_serial_init" id="tjv,9v:/NDob|L]Xg6@Q" x="188"
        y="113">
          <field name="SPEED">9600</field>
        </block>

        <block type="board_serial_print" id="jiy^BGYX2%rW7~UL;U9k" x="188"
        y="213">
          <value name="CONTENT">
            <block type="text" id="`HslM3xrne.?9hOvx9ee">
              <field name="TEXT">High</field>
            </block>
          </value>
          <next>
            <block type="board_base_inout_buildin_led" id="P~I|MFVpU/p{`3J|FK#d">
              <field name="STAT">HIGH</field>
              <next>
                <block type="board_base_delay" id="PSm#_.io;@~sg^Q2sW$k">
                  <value name="DELAY_TIME">
                    <shadow type="math_number" id="|U=NayhQkVzy6u-#|b=7">
                      <field name="NUM">1000</field>
                    </shadow>
                  </value>
                  <next>
                    <block type="board_serial_print" id="2(gaAsA=F+d@TBE%30l|">
                      <value name="CONTENT">
                        <block type="text" id="{,R)mS)uc[H;MJO}gRpY">
                          <field name="TEXT">Low</field>
                        </block>
                      </value>
                      <next>
                        <block type="board_base_inout_buildin_led" id="4msn~v7]{n`I|X{ZR7m5">
                          <field name="STAT">LOW</field>
                          <next>
                            <block type="board_base_delay" id="iolgzRtl,?b*M{j@7)TP">
                              <value name="DELAY_TIME">
                                <shadow type="math_number" id="6D,%)EtLoDI9]PIr8_%R">
                                  <field name="NUM">1000</field>
                                </shadow>
                              </value>
                            </block>
                          </next>
                        </block>
                      </next>
                    </block>
                  </next>
                </block>
              </next>
            </block>
            </next>
          </block>
        </xml>
    studentConfig: ''
    teacherConfig: ''
    stationConfig: ''
    showInCustom: station
    width: full
    height: tall
  - url: >-
      https://raw.githubusercontent.com/cross-lab-project/edrys_module-markdown-it/2.0.0/index.html
    config: >-

      # Arduino-Blink Example

      Try out different delays and observe the behavoir on the Arduino-board.

      The terminal is a fully functional terminal you can use it to run commands
      manually.


      * Hit <kbd>Ctrl</kbd>-<kbd>C</kbd> to stop the serial output manually.


      * Use command `clear` to clear the termial


      * or `exit` to restart the server


      * have fun ;-)


    studentConfig: ''
    teacherConfig: ''
    stationConfig: ''
    showInCustom: station
    width: half
    height: medium
  - url: https://cross-lab-project.github.io/edrys_module-pyxtermjs/index.html
    stationConfig:
      server: http://localhost:5000/pty
      execute: execute
      script: >
        echo $CODE | base64 --decode > Blink.ino

        arduino-cli sketch new Blink

        olddir=$(pwd)

        mv Blink.ino Blink

        cd Blink

        arduino-cli board attach -p /dev/ttyACM0 -b arduino:avr:uno

        cd $olddir

        arduino-cli compile Blink && arduino-cli upload -p /dev/ttyACM0 Blink &&
        arduino-cli monitor -p /dev/ttyACM0
      enable:
        teacher: true
        student: true
    showInCustom: station
    width: full
    height: medium
  - url: https://cross-lab-project.github.io/edrys_module-station-stream/index.html
    stationConfig:
      video: true
      audio: false
    showInCustom: station
    width: half
    height: medium
